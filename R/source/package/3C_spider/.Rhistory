setwd("Z:/Nathan/Code/TFL/R")
setwd("Z:/Nathan/Code/TFL/R")
install.packages("ggplot2")
install.packages("ggforce")
install.packages("dplyr")
version()
library(readxl)
install.packages("readxl")
source("Z:/Nathan/Code/TFL/R/source/test°aes.R", echo=TRUE)
install.packages("colourvalues")
source("Z:/Nathan/Code/TFL/R/source/test°aes.R", echo=TRUE)
source("Z:/Nathan/Code/TFL/R/source/test°aes.R", echo=TRUE)
plot <- ggplot()
source("Z:/Nathan/Code/TFL/R/source/package/3C_spider/R/test.R", echo=TRUE)
plot
source("Z:/Nathan/Code/TFL/R/source/test°aes.R", echo=TRUE)
my_dat <- read_excel(
path = "Z:/Nathan/Resultats/3C-Valentin/3C-DATA-v12_TAD 2-3_résultats Valentin_COPIE.xlsx",
sheet = 1,
range = "H14:J64",
col_names = TRUE)
my_dat <- na.omit(my_dat)
colnames(my_dat) <- c("neg", "val", "sem")
my_dat <- read_excel(
path = "Z:/Nathan/Resultats/3C-Valentin/3C-DATA-v12_TAD 2-3_résultats Valentin_COPIE.xlsx",
sheet = 1,
range = "H14:J64",
col_names = TRUE)
my_dat <- na.omit(my_dat)
colnames(my_dat) <- c("neg", "val", "sem")
data <- my_dat
colnames(data) <- c("position", "val", "sem")
data$trans <- log(my_dat$val + 1)
data$colour <- color_values(my_dat$extrapol,
palette = "viridis")
colnames(data) <- c("position", "val", "sem")
data$trans <- log(my_dat$val + 1)
data$colour <- color_values(data$trans,
palette = "viridis")
data$sign <- sign(data$position)
View(data)
data_split <- group_split(data, data$sign)
my_dat <- read_excel(
path = "Z:/Nathan/Resultats/3C-Valentin/3C-DATA-v12_TAD 2-3_résultats Valentin_COPIE.xlsx",
sheet = 1,
range = "H14:J64",
col_names = TRUE)
my_dat <- na.omit(my_dat)
data <- my_dat
colnames(data) <- c("position", "val", "sem")
data$trans <- log(my_dat$val + 1)
data$colour <- color_values(data$trans,
palette = "viridis")
data$trans <- log(my_dat$val + 1)
data$trans <- log(data$val + 1)
data$colour <- color_values(data$trans,
palette = "viridis")
data$sign <- sign(data$position)
data_split <- group_split(data, data$sign)
data_neg <- data.frame(data_split[[1]])
data_pos <- data.frame(data_split[[2]])
View(data_neg)
View(data_pos)
data_neg <- data_neg[order(my_dat_neg$position, decreasing = TRUE),]
data_pos <- data_pos[order(my_dat_pos$position, decreasing = FALSE),]
data_neg <- data_neg[order(data_neg$position, decreasing = TRUE),]
data_pos <- data_pos[order(data_pos$position, decreasing = FALSE),]
my_dat_neg$rank <- seq.int(nrow(data_neg))
my_dat_pos$rank <- seq.int(nrow(data_pos))
data_neg$rank <- seq.int(nrow(data_neg))
data_pos$rank <- seq.int(nrow(data_pos))
data_neg$summit <- ((data_neg$rank * abs(data_neg$position))
/ (nrow(data_neg)))
if (same_height = TRUE) {
if (same_height == TRUE) {
if (max(data_pos$y > max(data_neg$y))){
max_neg <- max(data_neg$y)
data_neg$y <- ((max(data_pos$y)
* data_neg$y)
/ max_neg)
} else {
max_pos <- max(data_pos$y)
data_pos$y <- ((max(data_neg$y)
* data_pos$y)
/ max_pos)
}
}
same_height = TRUE
colour = TRUE
if (same_height == TRUE) {
if (max(data_pos$y > max(data_neg$y))){
max_neg <- max(data_neg$y)
data_neg$y <- ((max(data_pos$y)
* data_neg$y)
/ max_neg)
} else {
max_pos <- max(data_pos$y)
data_pos$y <- ((max(data_neg$y)
* data_pos$y)
/ max_pos)
}
}
if (same_height == TRUE) {
if (max(data_pos$y) > max(data_neg$y)){
max_neg <- max(data_neg$y)
data_neg$y <- ((max(data_pos$y)
* data_neg$y)
/ max_neg)
} else {
max_pos <- max(data_pos$y)
data_pos$y <- ((max(data_neg$y)
* data_pos$y)
/ max_pos)
}
}
data <- my_dat
colnames(data) <- c("position", "val", "sem")
data$trans <- log(data$val + 1)
data$colour <- color_values(data$trans,
palette = "viridis")
data$sign <- sign(data$position)
data_split <- group_split(data, data$sign)
data_neg <- data.frame(data_split[[1]])
data_pos <- data.frame(data_split[[2]])
data_neg <- data_neg[order(data_neg$position, decreasing = TRUE),]
data_pos <- data_pos[order(data_pos$position, decreasing = FALSE),]
data_neg$rank <- seq.int(nrow(data_neg))
data_pos$rank <- seq.int(nrow(data_pos))
data_neg$summit <- ((data_neg$rank * abs(data_neg$position))
/ (nrow(data_neg)))
data_pos$summit <- ((data_pos$rank * abs(data_pos$position))
/ (nrow(data_pos)))
if (same_height == TRUE) {
if (max(data_pos$y) > max(data_neg$y)){
max_neg <- max(data_neg$y)
data_neg$y <- ((max(data_pos$y)
* data_neg$y)
/ max_neg)
} else {
max_pos <- max(data_pos$y)
data_pos$y <- ((max(data_neg$y)
* data_pos$y)
/ max_pos)
}
}
plot <- ggplot()
data <- my_dat
colnames(data) <- c("position", "val", "sem")
data$trans <- log(data$val + 1)
data$colour <- color_values(data$trans,
palette = "viridis")
data$sign <- sign(data$position)
data_split <- group_split(data, data$sign)
data_neg <- data.frame(data_split[[1]])
data_pos <- data.frame(data_split[[2]])
data_neg <- data_neg[order(data_neg$position, decreasing = TRUE),]
data_pos <- data_pos[order(data_pos$position, decreasing = FALSE),]
data_neg$rank <- seq.int(nrow(data_neg))
data_pos$rank <- seq.int(nrow(data_pos))
data_neg$y <- ((data_neg$rank * abs(data_neg$position))
/ (nrow(data_neg)))
data_pos$y <- ((data_pos$rank * abs(data_pos$position))
/ (nrow(data_pos)))
if (same_height == TRUE) {
if (max(data_pos$y) > max(data_neg$y)){
max_neg <- max(data_neg$y)
data_neg$y <- ((max(data_pos$y)
* data_neg$y)
/ max_neg)
} else {
max_pos <- max(data_pos$y)
data_pos$y <- ((max(data_neg$y)
* data_pos$y)
/ max_pos)
}
}
if (nrow(data_neg) != 0){
for(i in 1:nrow(data_neg)){
len <- nrow(data_neg)
j <- len - i + 1
row <- data_neg[j,]
pos <- row$pos
val <- row$trans
col <- row$colour
y   <- row$y
beziers <- data.frame(x = c(0, pos/2, pos),
y = c(0, y, 0))
if (colour == TRUE){
plot <- plot +
geom_bezier(aes(x = x,
y = y),
data = beziers,
size = val,
colour = col)
} else {
plot <- plot +
geom_bezier(aes(x = x,
y = y),
data = beziers,
size = val)
}
}
}
if (nrow(data_pos) != 0){
for(i in 1:nrow(data_pos)){
len <- nrow(data_pos)
j <- len - i + 1
row <- data_pos[j,]
pos <- row$pos
val <- row$trans
col <- row$colour
y   <- row$y
beziers <- data.frame(x = c(0, pos/2, pos),
y = c(0, y, 0))
if (colour = TRUE){
plot
if (nrow(data_pos) != 0){
for(i in 1:nrow(data_pos)){
len <- nrow(data_pos)
j <- len - i + 1
row <- data_pos[j,]
pos <- row$pos
val <- row$trans
col <- row$colour
y   <- row$y
beziers <- data.frame(x = c(0, pos/2, pos),
y = c(0, y, 0))
if (colour == TRUE){
plot <- plot +
geom_bezier(aes(x = x,
y = y),
data = beziers,
size = val,
colour = col)
} else {
plot <- plot +
geom_bezier(aes(x = x,
y = y),
data = beziers,
size = val)
}
}
}
plot
install.packages("devtools")
setwd("Z:/Nathan/Code/TFL/R/source/package/3C_spider")
library(readxl)
library(devtools)
load_all(".")
library(devtools)
load_all(".")
